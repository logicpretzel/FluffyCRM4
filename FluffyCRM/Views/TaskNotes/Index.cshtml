@model IEnumerable<TaskNoteList>
@using FluffyCRM.ViewModels;
@{
    ViewBag.Title = "Index";

}




<div class="noteform table-striped table-responsive table-bordered table-condensed table-padded">
    <div class="row">
        @*<div class="col-lg-1">
            @Html.DisplayNameFor(model => model.)
        </div>*@
        <div class="col-lg-2">
            @Html.DisplayNameFor(model => model.Subject)
        </div>
        <div class="col-lg-4">
            @Html.DisplayNameFor(model => model.Comment)
        </div>
        <div class="col-lg-2 smalllabel">
            Created by/ Assigned to
        </div>
        <div class="col-lg-1">
            @Html.DisplayNameFor(model => model.CreateDate)
        </div>
        <div class="col-lg-1">
            @Html.DisplayNameFor(model => model.Status)
        </div>


        @*<div class="col-lg-1">
            @Html.DisplayNameFor(model => model)
        </div>*@
        <div class="col-lg-2"></div>
    </div>

    @foreach (var item in Model)
    {
        <div class="row maccordion  expandtext">
            @*<div class="col-lg-1">
                @Html.DisplayFor(modelItem => item.TicketId)
            </div>*@
            <div class="col-lg-2">
                @Html.DisplayFor(modelItem => item.Subject)
            </div>
            <div class="col-lg-4 ">
                @(item.Comment)
            </div>
            <div class="col-lg-2 smalllabel">
               C: @Html.DisplayFor(modelItem => item.CreatedBy)<br />
               A: @Html.DisplayFor(modelItem => item.AssignedName)
            </div>
            <div class="col-lg-1 smalllabel">
                @Html.DisplayFor(modelItem => item.CreateDate)
            </div>
            <div class="col-lg-1 smalllabel">
                @Html.DisplayFor(modelItem => item.Status)
            </div>


            @*<div class="col-lg-1">
                @Html.DisplayFor(modelItem => item.CreatedByName)
            </div>*@
            <div class="col-lg-2">
                <span>@Html.ActionLink("Edit", "Edit", new { id = item.Id }) </span>
                <span> @Html.ActionLink("Details", "Details", new { id = item.Id }) </span>
                @if (User.IsInRole("Admin"))
                {

                    <span>@Html.ActionLink("Delete", "Delete", new { id = item.Id })</span>
                }
            </div>
        </div>
    }

</div>






@*@model IEnumerable<FluffyCRM.Models.TaskNote>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.JobTask_Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Subject)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Comment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreateDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
       
        <th>
            @Html.DisplayNameFor(model => model.ClientId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompletedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DueDate)
        </th>
       
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.JobTask_Id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Subject)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Comment)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreateDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        
        <td>
            @Html.DisplayFor(modelItem => item.ClientId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CompletedDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DueDate)
        </td>
       
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>*@
